// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesTaxCalculationKata.Data;

namespace SalesTaxCalculationKata.Data.Migrations
{
    [DbContext(typeof(KataDbContext))]
    [Migration("20190211220435_AddInitialSeedData")]
    partial class AddInitialSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsImported");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductCategoryId");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Book",
                            IsImported = false,
                            Price = 12.49m,
                            ProductCategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Music CD",
                            IsImported = false,
                            Price = 14.99m,
                            ProductCategoryId = 5
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Chocolate Bar",
                            IsImported = false,
                            Price = 0.85m,
                            ProductCategoryId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Imported Box of Chocolates",
                            IsImported = true,
                            Price = 10m,
                            ProductCategoryId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Imported Bottle of Fancy Perfume",
                            IsImported = true,
                            Price = 47.50m,
                            ProductCategoryId = 4
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Imported Bottle of Perfume",
                            IsImported = true,
                            Price = 27.99m,
                            ProductCategoryId = 4
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Bottle of Perfume",
                            IsImported = false,
                            Price = 18.99m,
                            ProductCategoryId = 4
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Packet of Headache Pills",
                            IsImported = false,
                            Price = 9.75m,
                            ProductCategoryId = 3
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "Imported Chocolates",
                            IsImported = true,
                            Price = 11.25m,
                            ProductCategoryId = 2
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1,
                            Description = "Books"
                        },
                        new
                        {
                            ProductCategoryId = 2,
                            Description = "Food"
                        },
                        new
                        {
                            ProductCategoryId = 3,
                            Description = "Medical Products"
                        },
                        new
                        {
                            ProductCategoryId = 4,
                            Description = "Cosmetics"
                        },
                        new
                        {
                            ProductCategoryId = 5,
                            Description = "Music"
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.Tax", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<decimal>("Rate");

                    b.HasKey("TaxId");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            TaxId = 1,
                            Description = "Sales",
                            Rate = 0.1m
                        },
                        new
                        {
                            TaxId = 2,
                            Description = "Import",
                            Rate = 0.05m
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.TaxExemption", b =>
                {
                    b.Property<int>("TaxExemptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductCategoryId");

                    b.Property<int>("TaxId");

                    b.HasKey("TaxExemptionId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("TaxId");

                    b.ToTable("TaxExemptions");

                    b.HasData(
                        new
                        {
                            TaxExemptionId = 1,
                            ProductCategoryId = 1,
                            TaxId = 1
                        },
                        new
                        {
                            TaxExemptionId = 2,
                            ProductCategoryId = 2,
                            TaxId = 1
                        },
                        new
                        {
                            TaxExemptionId = 3,
                            ProductCategoryId = 3,
                            TaxId = 1
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.Product", b =>
                {
                    b.HasOne("SalesTaxCalculationKata.Data.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.TaxExemption", b =>
                {
                    b.HasOne("SalesTaxCalculationKata.Data.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SalesTaxCalculationKata.Data.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
