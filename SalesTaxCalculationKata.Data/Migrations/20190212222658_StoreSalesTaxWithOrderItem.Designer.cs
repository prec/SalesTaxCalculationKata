// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesTaxCalculationKata.Data;

namespace SalesTaxCalculationKata.Data.Migrations
{
    [DbContext(typeof(KataDbContext))]
    [Migration("20190212222658_StoreSalesTaxWithOrderItem")]
    partial class StoreSalesTaxWithOrderItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Books"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Food"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Medical Products"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Cosmetics"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Music"
                        },
                        new
                        {
                            CategoryId = 6,
                            Description = "Import"
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GrandTotal");

                    b.Property<bool>("IsComplete");

                    b.Property<decimal>("SalesTaxTotal");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<decimal>("SalesTax");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Book",
                            Price = 12.49m
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Music CD",
                            Price = 14.99m
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Chocolate Bar",
                            Price = 0.85m
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Imported Box of Chocolates",
                            Price = 10m
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Imported Bottle of Fancy Perfume",
                            Price = 47.50m
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Imported Bottle of Perfume",
                            Price = 27.99m
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Bottle of Perfume",
                            Price = 18.99m
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Packet of Headache Pills",
                            Price = 9.75m
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "Imported Chocolates",
                            Price = 11.25m
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.Property<int>("ProductCategoryId");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductCategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 5,
                            ProductCategoryId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            ProductCategoryId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            ProductCategoryId = 4
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 6,
                            ProductCategoryId = 5
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4,
                            ProductCategoryId = 6
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 6,
                            ProductCategoryId = 7
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 4,
                            ProductCategoryId = 8
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 6,
                            ProductCategoryId = 9
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 4,
                            ProductCategoryId = 10
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            ProductCategoryId = 11
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2,
                            ProductCategoryId = 12
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 6,
                            ProductCategoryId = 13
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.Tax", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<decimal>("Rate");

                    b.HasKey("TaxId");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            TaxId = 1,
                            Description = "Sales",
                            Rate = 0.1m
                        },
                        new
                        {
                            TaxId = 2,
                            Description = "Import",
                            Rate = 0.05m
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.TaxCategory", b =>
                {
                    b.Property<int>("TaxCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("TaxId");

                    b.HasKey("TaxCategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaxId");

                    b.ToTable("TaxCategories");

                    b.HasData(
                        new
                        {
                            TaxCategoryId = 1,
                            CategoryId = 4,
                            TaxId = 1
                        },
                        new
                        {
                            TaxCategoryId = 2,
                            CategoryId = 5,
                            TaxId = 1
                        },
                        new
                        {
                            TaxCategoryId = 3,
                            CategoryId = 6,
                            TaxId = 2
                        });
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.OrderItem", b =>
                {
                    b.HasOne("SalesTaxCalculationKata.Data.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SalesTaxCalculationKata.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.ProductCategory", b =>
                {
                    b.HasOne("SalesTaxCalculationKata.Data.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SalesTaxCalculationKata.Data.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalesTaxCalculationKata.Data.Models.TaxCategory", b =>
                {
                    b.HasOne("SalesTaxCalculationKata.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SalesTaxCalculationKata.Data.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
